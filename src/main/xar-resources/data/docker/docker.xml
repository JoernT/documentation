<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<article version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

  <info>
    <title>Containerization via Docker</title>
    <date>1Q20</date>
    <keywordset>
      <keyword>application-development</keyword>
      <keyword>operations</keyword>
    </keywordset>
  </info>

  <para>This article covers the configuration and use cases of the official
    <link xlink:href="https://hub.docker.com/r/existdb/existdb/">docker images</link>
    for eXist-db</para>

  <sect1 xml:id="container-intro">
    <title>Running exist inside a container</title>
    <para>Container have become a popular means of distributing software without the need to worry hardware and software requirements other then the ability to run containers. Containers offer powerful features for continious deployment of production
      systems, and convenient ways for testing software without interference from external dependencies. How it looks on my computer is how it looks on yours.</para>

    <sect2 xml:id="official-images">
        <title>The official images</title>
      <para>We offer minimal images of eXist-db which are automatically updated as part of the build-test life-cycle. The images are based on Google Cloud Platform's
        <link xlink:href="https://github.com/GoogleCloudPlatform/distroless">
          Distroless Docker Images</link>. You can find the source code
        <link xlink:href="https://github.com/eXist-db/exist/tree/develop/exist-docker">here</link>.</para>
      <para>Next to fully tagged version, we have two rolling release channels:</para>
        <orderedlist>
          <listitem>
            <para>
              <code>release</code>: for the latest stable releases based on the master branch.</para>
          </listitem>
          <listitem>
            <para>
              <code>latest</code>: for last commit to the develop branch (within minutes of each commit).</para>
          </listitem>
        </orderedlist>
      </sect2>
    </sect1>

    <sect1 xml:id="container-how-to">
      <title>How to get started</title>
      <para>First you need to download an images:</para>
        <para><code>docker pull existdb/existdb:latest</code></para>
      <para>Then you can start the container using that image:</para>
        <para><code>docker run -it -d -p 8080:8080 -p 8443:8443 --name exist existdb/existdb:latest</code></para>
    <sect2 xml:id="docker-what">
        <title>What does this do?</title>
        <para>You have just download and started eXist-db without launching an installer or having to provide java. More specifically:</para>
        <itemizedlist>
            <listitem>
                <para><code>-it</code>: allocates a <literal>TTY</literal> and keeps <literal>STDIN</literal> open. This allows you to interact with the running Docker container via your console.
                </para>
            </listitem>
            <listitem>
                <para><code>-d</code>: detaches the container from the terminal that started it. So your container won't stop when you close the terminal.</para>
            </listitem>
            <listitem>
                <para><code>-p</code>: maps the Containers internal and external port assignments (we recommend sticking with matching pairs). This allows you to connect to the eXist-db Web Server running in the Docker container.</para>
            </listitem>
            <listitem>
                <para><code>--name</code>: lets you provide a name (instead of using a randomly generated one)</para>
            </listitem>
        </itemizedlist>
        <para>The only required parts are <code>docker run existdb/existdb</code>.</para>
        <para>For a full list of available options see the official <link xlink:href="https://docs.docker.com/engine/reference/commandline/run/">Docker documentation</link>.
            You can now access your running instance by going go <literal>localhost:8080 </literal> inside your browser. To stop the container:</para>
        <para><code>docker stop exist</code></para>
    </sect2>
    </sect1>
    <sect1 xml:id="container-interact">
        <title>Interacting with the running container</title>
        <para>You can interact with a running container as if it were a regular Linux host. 
            <important><para>GCR base images do not contain a shell this is by design. You can issue shell-like commands to the Java admin client, as we do throughout this readme, but you can't open the shell in interactive mode.</para></important> 
            We'll continue to use <code>exist</code> as the name of our container:</para>        
        <programlisting xlink:href="listings/listing-1.txt"/>
        <para>Containers build from this image run a periodical health-check to make sure that eXist-db is operating normally. If <code>docker ps</code> reports unhealthy you can get a more detailed report with this command:</para>
        <para><code>docker inspect --format='{{json .State.Health}}' exist</code></para>
        <para>To check exist's logs: <code>docker logs exist</code></para>
    </sect1>
    <sect1 xml:id="base-image">
        <title>Use as Base Image</title>
        <para>A common usage of these images is as a base image for your own applications. We'll take a quick look at three scenarios of increasing complexity, to demonstrate how to achieve common tasks from inside <literal>Dockerfile</literal>.</para>
        <sect2 xml:id="base-simple">
            <title>A simple base image</title>
            <para>The simplest case assumes that you have a <code>.xar</code> app inside a build folder on the same level as your own <literal>Dockerfile</literal>. To get an image of an eXist-db instance with your app installed and running, you would then:</para>
            <programlisting xlink:href="listings/listing-2.txt"/>
            <para>You should see something like this:</para>
            <programlisting xlink:href="listings/listing-3.txt"/>
            <para>The result is a new image of your app installed into eXist-db. Since you didn't provide further instructions it will simply reuse the <code>EXPOSE, CMD, HEALTHCHECK,</code> etc instructions defined by the base image. You can now publish this image to a docker registry and share it with others.</para>
        </sect2>
    </sect1>

  </article>
