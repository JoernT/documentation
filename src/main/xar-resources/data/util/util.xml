<?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng"
        schematypens="http://relaxng.org/ns/structure/1.0"?><?xml-model href="http://docbook.org/xml/5.0/rng/docbook.rng" type="application/xml"
        schematypens="http://purl.oclc.org/dsdl/schematron"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.0">
   <info>
      <title>The util module</title>
      <date>October 2012</date>
      <keywordset>
         <keyword>TBD</keyword>
      </keywordset>
   </info>

   <!-- ================================================================== -->

   <sect1 xml:id="introduction">
      <title>Introduction</title>

      <para>The util module (function namespace <literal>http://exist-db.org/xquery/util</literal>)
                contains a number of common utility functions, such as <literal>util:md5</literal>,
                which can generate md5 hashes. The full list of functions and their documentation is
                in the <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/exist/apps/fundocs/">Function Documentation Library</link>. This
                article discusses some of the highlights and main uses for this module.</para>
   </sect1>

   <!-- ================================================================== -->

   <sect1 xml:id="eval">
      <title>util:eval()</title>

      <variablelist spacing="compact">
         <varlistentry>
            <term>util:eval()</term>
            <listitem>
               <para>This function is used to dynamically execute a constructed XQuery
                            expression inside a running XQuery script. This can be very handy in
                            some cases - for example, web-based applications that dynamically
                            generate queries based on HTTP request parameters the user has
                            passed.</para>
               <para>By default, the dynamically executed query inherits most of the
                            current context, including local variables:</para>
               <programlisting xmlns:xlink="http://www.w3.org/1999/xlink" language="xquery" xlink:href="listings/listing-1.txt"/>
            </listitem>
         </varlistentry>
      </variablelist>
      <para>Consider the following simple example script in which any two numbers submitted by
                a user are added or subtracted: </para>
      <example>
         <title>Adding/Subtracting Two Numbers</title>
         <programlisting xmlns:xlink="http://www.w3.org/1999/xlink" language="xquery" xlink:href="listings/listing-2.txt"/>
      </example>
      <para>In this example, there is one XQuery script responsible for evaluating the
                user-supplied parameters, which uses the parameters from the HTTP request to
                construct another XQuery expression, which it then passes to
                    <literal>util:eval</literal> for evaluation. The application would then
                post-process the returned results, and display them to the user. (For more
                information on how to write web applications using XQuery, go to our <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="devguide.xml">Developer's Guide</link>.)</para>
   </sect1>
</article>